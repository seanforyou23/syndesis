/*
 * Copyright (C) 2016 Red Hat, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Camel ApiMethod Enumeration generated by camel-api-component-maven-plugin
 * Generated on: Thu Oct 11 18:45:59 UTC 2018
 */
package org.apache.camel.component.olingo4.internal;

import static org.apache.camel.util.component.ApiMethodArg.arg;
import java.lang.reflect.Method;
import java.util.List;
import org.apache.camel.component.olingo4.api.Olingo4App;
import org.apache.camel.util.component.ApiMethod;
import org.apache.camel.util.component.ApiMethodArg;
import org.apache.camel.util.component.ApiMethodImpl;

/**
 * Camel {@link ApiMethod} Enumeration for org.apache.camel.component.olingo4.api.Olingo4App
 */
@SuppressWarnings({"ImmutableEnumChecker", "PMD"})
public enum Olingo4AppApiMethod implements ApiMethod {

    BATCH(
        void.class,
        "batch",
        arg("edm", org.apache.olingo.commons.api.edm.Edm.class),
        arg("endpointHttpHeaders", java.util.Map.class),
        arg("data", Object.class),
        arg("responseHandler", org.apache.camel.component.olingo4.api.Olingo4ResponseHandler.class)),
    CREATE(
        void.class,
        "create",
        arg("edm", org.apache.olingo.commons.api.edm.Edm.class),
        arg("resourcePath", String.class),
        arg("endpointHttpHeaders", java.util.Map.class),
        arg("data", Object.class),
        arg("responseHandler", org.apache.camel.component.olingo4.api.Olingo4ResponseHandler.class)),
    DELETE(
        void.class,
        "delete",
        arg("resourcePath", String.class),
        arg("endpointHttpHeaders", java.util.Map.class),
        arg("responseHandler", org.apache.camel.component.olingo4.api.Olingo4ResponseHandler.class)),
    MERGE(
        void.class,
        "merge",
        arg("edm", org.apache.olingo.commons.api.edm.Edm.class),
        arg("resourcePath", String.class),
        arg("endpointHttpHeaders", java.util.Map.class),
        arg("data", Object.class),
        arg("responseHandler", org.apache.camel.component.olingo4.api.Olingo4ResponseHandler.class)),
    PATCH(
        void.class,
        "patch",
        arg("edm", org.apache.olingo.commons.api.edm.Edm.class),
        arg("resourcePath", String.class),
        arg("endpointHttpHeaders", java.util.Map.class),
        arg("data", Object.class),
        arg("responseHandler", org.apache.camel.component.olingo4.api.Olingo4ResponseHandler.class)),
    READ(
        void.class,
        "read",
        arg("edm", org.apache.olingo.commons.api.edm.Edm.class),
        arg("resourcePath", String.class),
        arg("queryParams", java.util.Map.class),
        arg("endpointHttpHeaders", java.util.Map.class),
        arg("responseHandler", org.apache.camel.component.olingo4.api.Olingo4ResponseHandler.class)),
    UPDATE(
        void.class,
        "update",
        arg("edm", org.apache.olingo.commons.api.edm.Edm.class),
        arg("resourcePath", String.class),
        arg("endpointHttpHeaders", java.util.Map.class),
        arg("data", Object.class),
        arg("responseHandler", org.apache.camel.component.olingo4.api.Olingo4ResponseHandler.class)),
    UREAD(
        void.class,
        "uread",
        arg("edm", org.apache.olingo.commons.api.edm.Edm.class),
        arg("resourcePath", String.class),
        arg("queryParams", java.util.Map.class),
        arg("endpointHttpHeaders", java.util.Map.class),
        arg("responseHandler", org.apache.camel.component.olingo4.api.Olingo4ResponseHandler.class));


    private final ApiMethod apiMethod;

    private Olingo4AppApiMethod(Class<?> resultType, String name, ApiMethodArg... args) {
        this.apiMethod = new ApiMethodImpl(Olingo4App.class, resultType, name, args);
    }

    @Override
    public String getName() { return apiMethod.getName(); }

    @Override
    public Class<?> getResultType() { return apiMethod.getResultType(); }

    @Override
    public List<String> getArgNames() { return apiMethod.getArgNames(); }

    @Override
    public List<Class<?>> getArgTypes() { return apiMethod.getArgTypes(); }

    @Override
    public Method getMethod() { return apiMethod.getMethod(); }
}
