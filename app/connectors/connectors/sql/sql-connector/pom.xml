<?xml version="1.0" encoding="UTF-8"?>
<!--
~   Copyright (C) 2016 Red Hat, Inc.
~
~   Licensed under the Apache License, Version 2.0 (the "License");
~   you may not use this file except in compliance with the License.
~   You may obtain a copy of the License at
~
~           http://www.apache.org/licenses/LICENSE-2.0
~
~   Unless required by applicable law or agreed to in writing, software
~   distributed under the License is distributed on an "AS IS" BASIS,
~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~   See the License for the specific language governing permissions and
~   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.syndesis</groupId>
    <artifactId>sql-connectors</artifactId>
    <version>1.2-SNAPSHOT</version>
  </parent>

  <artifactId>sql-connector</artifactId>
  <packaging>jar</packaging>
  <name>Connectors :: SQL :: Connector</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Camel BOM -->
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-parent</artifactId>
        <version>${camel.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- base component to use for this connector -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-sql</artifactId>
    </dependency>
    <!-- add spring-boot support -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-sql-starter</artifactId>
    </dependency>

    <!-- camel-connector -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-connector</artifactId>
    </dependency>
    <dependency>
        <groupId>io.syndesis</groupId>
        <artifactId>sql-common</artifactId>
        <version>${project.version}</version>
    </dependency>

    <!-- camel and spring boot compiler plugins -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>apt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>

    <!--  supported drivers -->
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <!-- The Oracle Driver needs to be added manually by user, for licensing compliance
    it can not be shipped. We need to provide some mechnism so the integrator can upload
    this jar. (http://www.oracle.com/technetwork/database/features/jdbc/index-091264.html)
    <dependency>
      <groupId>oracle</groupId>
      <artifactId>jdbc</artifactId>
      <version>12.0</version>
      <scope>system</scope>
      <systemPath>ojdbc8.jar</systemPath>
    </dependency>
     -->

    <!-- testing -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-stream</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.syndesis</groupId>
      <artifactId>sql-common</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jsonSchema</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>copy-camel-schema</id>
            <phase>process-classes</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>${project.build.directory}/classes/camel-connector-schema.json</sourceFile>
              <destinationFile>${project.build.directory}/classes/io/syndesis/connector/sql-connector.json</destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- generate components meta-data and validate component includes documentation etc -->
      <plugin>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-package-maven-plugin</artifactId>
        <version>${camel.version}</version>
        <executions>
          <execution>
            <id>prepare</id>
            <goals>
              <goal>prepare-components</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>validate</id>
            <goals>
              <goal>validate-components</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>

       <!-- generate connector -->
      <plugin>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-connector-maven-plugin</artifactId>
        <version>${camel.version}</version>
        <executions>
          <execution>
            <id>boot</id>
            <goals>
              <goal>prepare-spring-boot-auto-configuration</goal>
            </goals>
            <configuration>
              <!-- we done want license headers -->
              <includeLicenseHeader>false</includeLicenseHeader>
              <!-- we dont camel.connector as prefix -->
              <configurationPrefix>false</configurationPrefix>
            </configuration>
          </execution>
          <execution>
            <id>connector</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>never</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
